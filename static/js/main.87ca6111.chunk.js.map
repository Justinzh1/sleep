{"version":3,"sources":["components/Home/index.js","components/Navbar/index.js","components/questions.js","components/quiz/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Component","Navbar","className","Link","to","questions","id","question","options","5","4","3","2","1","6","0","Quiz","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","score","prev","next","setState","parseInt","_this2","q","forEach","qu","i","push","quiz_QuizQuestion","update_score","x","y","key","get_questions","QuizQuestion","_this3","answered","selected","old","_this4","rows","entries","k","v","onClick","handle_click","get_rows","get_indicator","App","BrowserRouter","components_Navbar","Route","exact","path","process","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87ca6111.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"navbar-container\">\n\t\t\t\t<div className=\"navbar-logo-container\">\n\t\t\t\t\t<p className=\"inline-block navbar-logo\">Sleep</p>\n\t\t\t\t\t<p className=\"inline-block navbar-logo-text\">// why you need it.</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"navbar-menu\">\n\t\t\t\t\t<Link to=\"/info\">info</Link>\n\t\t\t\t\t<Link to=\"/quiz\">compare</Link>\n\t\t\t\t\t<Link to=\"/faq\">faq</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","export default {\n\tquestions: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tquestion: \"What time would you get up if you were entirely free to plan your day?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t5: \"5:00 AM – 6:30 AM\",\n\t\t\t\t\t4: \"6:30 AM – 7:45 AM\",\n\t\t\t\t\t3: \"7:45 AM – 9:45 AM\",\n\t\t\t\t\t2: \"9:45 AM – 11:00 AM\",\n\t\t\t\t\t1: \"11:00 AM – 12:00 PM\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tquestion: \"Approximately what time would you go to bed if you were entirely free to plan your evening?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t5: \"8:00 PM - 9:00 PM\",\n\t\t\t\t\t4: \"9:00 PM - 10:15 PM\",\n\t\t\t\t\t3: \"10:15 PM - 12:30 AM\",\n\t\t\t\t\t2: \"12:30 AM - 1:45 AM\",\n\t\t\t\t\t1: \"1:45 AM - 3:00 AM\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tquestion: \"If you usually have to get up at a specific time in the morning, how much do you depend on an alarm clock?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t4: \"Not at all\",\n\t\t\t\t\t3: \"Slightly\",\n\t\t\t\t\t2: \"Somewhat\",\n\t\t\t\t\t1: \"Very much\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tquestion: \"How easy do you find it to get up in the morning (when you are not awakened unexpectedly)?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t1: \"Very difficult\",\n\t\t\t\t\t2: \"Somewhat difficult\",\n\t\t\t\t\t3: \"Fairly easy\",\n\t\t\t\t\t4: \"Very easy\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tquestion: \"How alert do you feel during the first half hour after you wake up in the morning?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t1: \"Not at all alert\",\n\t\t\t\t\t2: \"Slightly alert\",\n\t\t\t\t\t3: \"Fairly alert\",\n\t\t\t\t\t4: \"Very alert\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tquestion: \"How hungry do you feel during the first half hour after you wake up?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t1: \"Not at all hungry\",\n\t\t\t\t\t2: \"Slightly hungry\",\n\t\t\t\t\t3: \"Fairly hungry\",\n\t\t\t\t\t4: \"Very hungry\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tquestion: \"During the first half hour after you wake up in the morning, how do you feel?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t1: \"Very tried\",\n\t\t\t\t\t2: \"Fairly tired\",\n\t\t\t\t\t3: \"Fairly refreshed\",\n\t\t\t\t\t4: \"Very refreshed\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tquestion: \"If you had no commitments the next day, what time would you go to bed compared to your usual bedtime?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t4: \"Seldom or never later\",\n\t\t\t\t\t3: \"Less than 1 hour later\",\n\t\t\t\t\t2: \"1-2 hours later\",\n\t\t\t\t\t1: \"More than 2 hours later\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 9,\n\t\t\tquestion: \"You have decided to do physical exercise.  A friend suggests that you do this for one hour twice a week, and the best time for him is between 7-8 a.m. Bearing in mind nothing but your own internal “clock,” how do you think you would perform?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t4: \"Would be in good form\",\n\t\t\t\t\t3: \"Would be in reasonable form\",\n\t\t\t\t\t2: \"Would find it difficult\",\n\t\t\t\t\t1: \"Would find it very difficult\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 10,\n\t\t\tquestion: \"At approximately what time in the evening do you feel tired, and, as a result, in need of sleep?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t5: \"8:00 PM - 9:00 PM\",\n\t\t\t\t\t4: \"9:00 PM - 10:15 PM \",\n\t\t\t\t\t3: \"10:15 PM  - 12:45 AM\",\n\t\t\t\t\t2: \"12:45 AM - 2:00 AM\",\n\t\t\t\t\t1: \"2:00 AM - 3:00 AM\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 11,\n\t\t\tquestion: \"You want to be at your peak performance for a test that you know is going to be mentally exhausting and will last two hours.  You are entirely free to plan your day.  Considering only your “internal clock,” which one of the four testing times would you choose?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t6: \"8 AM - 10 AM\",\n\t\t\t\t\t4: \"11 AM - 1 PM\",\n\t\t\t\t\t2: \"3 PM - 5 PM\",\n\t\t\t\t\t0: \"7 PM - 9 PM\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 12,\n\t\t\tquestion: \"If you got into bed at 11 PM., how tired would you be?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t0: \"Not at all tired\",\n\t\t\t\t\t2: \"A little tired\",\n\t\t\t\t\t3: \"Fairly tired\",\n\t\t\t\t\t5: \"Very tired\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 13,\n\t\t\tquestion: \"For some reason you have gone to bed several hours later than usual, but there is no need to get up at any particular time the next morning.  Which one of the following are you most likely to do?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t4: \"Will wake up at usual time, but will not fall back asleep\",\n\t\t\t\t\t3: \"Will wake up at usual time and will doze thereafter\",\n\t\t\t\t\t2: \"Will wake up at usual time, but will face asleep again\",\n\t\t\t\t\t1: \"Will not wake up until later than usual\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 14,\n\t\t\tquestion: \"One night you have to remain awake between 4-6 a.m. in order to carry out a night watch.  You have no time commitments the next day.  Which one of the alternatives would suit you best?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t1: \"Would not go to bed until the watch is over\",\n\t\t\t\t\t2: \"Would take a nap before and sleep after\",\n\t\t\t\t\t3: \"Would take a good sleep before and nap after\",\n\t\t\t\t\t4: \"Would sleep only before the watch\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 15,\n\t\t\tquestion: \"You have two hours of hard physical work.  You are entirely free to plan your day.  Considering only your internal “clock,” which of the following times would you choose?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t4: \"8 AM - 10 AM\",\n\t\t\t\t\t3: \"11 AM - 1 PM\",\n\t\t\t\t\t2: \"3 PM - 5 PM\",\n\t\t\t\t\t1: \"7 PM - 9 PM\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 16,\n\t\t\tquestion: \"You have decided to do physical exercise.  A friend suggests that you do this for one hour twice a week.  The best time for her is between 10-11 p.m. Bearing in mind only your internal “clock,” how well do you think you would perform?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t4: \"Would be in good form\",\n\t\t\t\t\t3: \"Would be in reasonable form\",\n\t\t\t\t\t2: \"Would find it difficult\",\n\t\t\t\t\t1: \"Would find it very difficult\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 17,\n\t\t\tquestion: \"Suppose you can choose your own work hours.  Assume that you work a five-hour day (including breaks), your job is interesting, and you are paid based on your performance.  At approximately what time would you choose to begin?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t5: \"5 hours starting between 4:00 – 8:00 a.m.\",\n\t\t\t\t\t4: \"5 hours starting between 8:00 – 9:00 a.m.\",\n\t\t\t\t\t3: \"5 hours starting between 9:00 a.m. – 2:00 p.m.\",\n\t\t\t\t\t2: \"5 hours starting between 2:00 – 5:00 p.m.\",\n\t\t\t\t\t1: \"5 hours starting between 5:00 p.m. – 4:00 a.m.\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 18,\n\t\t\tquestion: \"At approximately what time of day do you usually feel your best?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t5: \"5:00 AM - 8:00 AM\",\n\t\t\t\t\t4: \"8:00 AM - 10:00 AM\",\n\t\t\t\t\t3: \"10:00 AM - 5:00 PM\",\n\t\t\t\t\t2: \"5:00 PM - 10:00 PM\",\n\t\t\t\t\t1: \"10:00 PM - 5:00 AM\",\n\t\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: 19,\n\t\t\tquestion: \"One hears about “morning types” and “evening types.”  Which one of these types do you consider yourself to be?\",\n\t\t\toptions:\n\t\t\t\t{\n\t\t\t\t\t6: \"Definitely a morning type\",\n\t\t\t\t\t4: \"Rather more a morning type than an evening type\",\n\t\t\t\t\t2: \"Rather more an evening type than a morning type\",\n\t\t\t\t\t0: \"Definitely an evening type\",\n\t\t\t\t},\n\t\t},\n\t]\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport questions from '../questions.js';\nimport './Quiz.css';\n\nclass Quiz extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tscore: 0\n\t\t};\n\t}\n\n\tupdate_score(prev, next) {\n\t\tthis.setState({\n\t\t\tscore: this.state.score - parseInt(prev) + parseInt(next)\n\t\t});\n\t}\n\n\tget_questions() {\n\t\tvar q = [];\n\t\tquestions.questions.forEach((qu, i) => {\n\t\t\tq.push(\n\t\t\t\t<QuizQuestion\n\t\t\t\t\tquestion={qu.question}\n\t\t\t\t\toptions={qu.options}\n\t\t\t\t\tupdate_score={(x,y) => this.update_score(x,y)}\n\t\t\t\t\tkey={qu.id}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t\treturn q;\n\t}\n\n\trender () {\n\t\tlet q = this.get_questions();\n\t\treturn (\n\t\t\t<div className=\"quiz-container\">\n\t\t\t\t<h2 className=\"quiz-question\">Are you a morning person or an evening person?</h2>\n\t\t\t\t<p>The morningness-eveningness test is a way to measure when you are the most productive. This test features a systematic way to evaluate your score. After filling out the following sections you can see the results along with how you compare with others. </p>\n\t\t\t\t{q}\n\t\t\t\t<br />\n\t\t\t\t<div className=\"quiz-results\">\n\t\t\t\t\t<h2 className=\"quiz-question\">Your Morningness-Eveningness Score is {this.state.score} </h2>\n\t\t\t\t\t<p> Higher scores mean that you are more of a morning person, whereas lower scores mean that you are more of an evening person. The score can range from 23 to 76.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass QuizQuestion extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tanswered: false,\n\t\t\tselected: null,\n\t\t\tscore: 0\n\t\t}\n\t}\n\n\thandle_click(i) {\n\t\tlet old = (!this.state.selected) ? 0 : this.state.selected;\n\t\tthis.props.update_score(old, i);\n\t\tthis.setState({\n\t\t\tanswered: true,\n\t\t\tselected: i\n\t\t});\n\t}\n\t\n\tget_rows() {\n\t\tvar rows = [];\n\t\tif (!this.props || !this.props.options) {\n\t\t\treturn;\n\t\t}\n\t\tObject.entries(this.props.options).forEach((k, v) => {\n\t\t\tlet selected = \"\";\n\t\t\tif (this.state.selected === k[0]) {\n\t\t\t\tselected = \"selected\"\t\n\t\t\t}\n\t\t\trows.push(\n\t\t\t\t<tr key={k[1]} className={selected} onClick={() => this.handle_click(k[0])}>\n\t\t\t\t\t<td>{k[1]}</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t});\n\t\treturn rows;\n\t}\n\n\tget_indicator() {\n\t\treturn (!this.state.answered) ?\n\t\t\t(<i className=\"far fa-circle indicator\"></i>) :\n\t\t\t(<i className=\"fas fa-check-circle indicator\"></i>);\n\t}\n\n\trender () {\n\t\tconst rows = this.get_rows();\n\t\treturn (\n\t\t\t<div className=\"quiz-question-container\"> \n\t\t\t\t{ this.get_indicator() }\n\t\t\t\t<h2 className=\"quiz-question\">\n\t\t\t\t\t{ this.props.question }\n\t\t\t\t</h2>\n\t\t\t\t<table> \n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{ rows }\t\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Quiz;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './components/Home/index';\nimport Navbar from './components/Navbar/index';\nimport Quiz from './components/quiz/index';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Navbar />\t\n\t\t\t\t\t<Route exact path={process.env.PUBLIC_URL + \"/\"} component={Home} />\t\n\t\t\t\t\t<Route exact path={process.env.PUBLIC_URL + \"/quiz\"} component={Quiz} />\t\n\t\t\t\t</div>\n\t\t\t</Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}